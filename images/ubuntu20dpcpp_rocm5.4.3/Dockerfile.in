#include ../ubuntu20rocm5.4.3/Dockerfile.in

RUN mkdir compilers_gits
RUN mkdir compilers

###################################
## DPC++ (requirement)
###################################
#update cmake
RUN sudo apt-get update
RUN sudo apt-get install -y ca-certificates gpg wget
RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
RUN echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ focal main' | sudo tee /etc/apt/sources.list.d/kitware.list >/dev/null
RUN sudo apt-get update
RUN sudo rm /usr/share/keyrings/kitware-archive-keyring.gpg
RUN sudo apt-get install -y kitware-archive-keyring
RUN sudo apt-get update
RUN sudo apt-get install -y cmake


#esimd requirement
RUN sudo apt install -y libva-dev libffi-dev libtool

#OpenCL requirement
RUN sudo apt install -y clinfo intel-opencl-icd opencl-headers

#check clinfo
RUN clinfo

###################################
## DPC++
###################################
WORKDIR /home/docker/compilers_gits

RUN git clone https://github.com/intel/llvm -b v6.0.0

WORKDIR /home/docker/compilers_gits/llvm

# configure dpcpp
RUN python3 buildbot/configure.py \
        --llvm-external-projects compiler-rt \
        --hip \
        --cmake-opt="-DCMAKE_INSTALL_PREFIX=/home/docker/compilers/DPCPP" \
        --cmake-opt="-DSYCL_BUILD_PI_HIP_ROCM_DIR=/opt/rocm"

WORKDIR /home/docker/compilers_gits/llvm/build

RUN ninja -k0 all lib/all tools/libdevice/libsycldevice
RUN ninja -k0 install

WORKDIR /home/docker

RUN rm -rf compilers_gits
